# from flask import Flask, render_template, request, redirect, session
from flask import *
from flask_sqlalchemy import SQLAlchemy
from flask_mysqldb import MySQL

# create the extension
db=SQLAlchemy()
# create the app
app=Flask(__name__)
app.config["SQLALCHEMY_DATABASE_URI"] = "sqlite:///project.db"
app.config["SQLALCHEMY_DATABASE_URI"]= "mysql mysqlconnector://root:localhost/user"
db.init_app(app)

class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(200), unique=False, nullable=False)
    email = db.Column(db.String(200),unique=True)

with app.app_context():
    db.create_all()

@app.route("/users")
def user_list():
    users = db.session.execute(db.select(User).order_by(User.id)).scalars()
    return render_template("user/list.html", users=users)

@app.route("/users/create", methods=["GET", "POST"])
def user_create():
    if request.method == "POST":
        user = User(
            username=request.form["username"],
            email=request.form["email"],
        )
        db.session.add(user)
        db.session.commit()
        return redirect(url_for("user_list", id=user.id))
    return render_template("user/create.html")

@app.route("/user/<int:id>")
def user_detail(id):
    user = db.get_or_404(User, id)
    return render_template("user/detail.html", user=user)

@app.route("/user/<int:id>/delete", methods=["GET", "POST"])
def user_delete(id):
    user = db.get_or_404(User, id)

    if request.method == "POST":
        db.session.delete(user)
        db.session.commit()
        flash("Suppression Effectuée","delete")
        return redirect(url_for("user_list"))

    return render_template("user/delete.html", user=user) 
 
@app.route("/user/<int:id>/update", methods=["GET", "POST"])
def user_update(id):
    user = db.get_or_404(User, id)

    if request.method == "POST":
        user.username=request.form['username']
        user.email=request.form['email']
        db.session.commit()
        flash('Modification Effectuée','update')
        return redirect(url_for("user_list"))
    return render_template("user/update.html", user=user)     

if __name__== '__main__':
    app.run(debug=True, port=3000)  
